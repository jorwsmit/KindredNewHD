<!--This componet is to sort the List view data in the accending order or decending order when user click  on particular colum header  -->
<apex:component id="pbEnhancerMain" layout="block" selfClosing="true">
   
   <apex:attribute type="String" required="true" name="targetPbTableIds" description="A comma seperated list of Ids of target pageblock table" />
   <apex:attribute type="boolean" name="paginate" description="assign true if you want to use the pagination feature,default value is true" default="true"/>
   <apex:attribute type="Integer" name="defaultPageSize" description="Default page size when pagination is implemented"/>
   <apex:attribute type="String" name="pageSizeOptions" description="A comma seperated list of integer values that will displayed as dropdown for page size"/>
   
   <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"/>
   <apex:includeScript value="{!URLFOR($Resource.PBTSorter, 'jquery.tablesorter.min.js')}"/>
   <apex:includeScript value="{!URLFOR($Resource.PBTSorter, 'jquery.tablesorter.pager.js')}"/>
   
   <script>
      $atxPB = jQuery.noConflict();
      
      $atxPB(document).ready(function(){          
          initPageBlockTableEnhancer();    
      });
      
      function getTemplate(){
         var $pager = $atxPB($atxPB("#Blogforce9paginatorTemplate").html());        
         if({!pageSizeOptions != NULL}){             
             var pageOptions = '{!pageSizeOptions}'.split(",");            
             var $select = $atxPB($pager.find('.pagesize'));            
             $atxPB.each(pageOptions,function(){
                 var $option = $atxPB('<option value="'+this.trim()+'">'+this.trim()+'</option>');
                 $option.appendTo( $select);
                 
             });                        
         }
         
         return $pager;
      }
      
      function getPager(tableElem){
         if(tableElem.next().hasClass('paginator')){
             tableElem.next().remove();
         }
         var pager = getTemplate();
         pager.find('.pagesize').each(function(){
             $atxPB(this).find('option[value="'+{!defaultPageSize}+'"]').attr('selected','selected');
         });
         
         return pager;
      } 
      
      function initPageBlockTableEnhancer(){
          try{
              
              var targetIds = '{!targetPbTableIds}';
              var targetIdArray = targetIds.split(",");
              $atxPB(targetIdArray ).each(function(){
                var elem = this.trim();
                var elemObj = $atxPB("[id$='"+elem+"']");
                elemObj.addClass("BlogForce9Table");
                if(elemObj){
                    
                    /*enable sorting in pageblock tables using table sorter plugin*/
                    if({!paginate} == true){console.log(elemObj.next());
                        var pager = getPager(elemObj);
                        var pageSize = validatePageSize(pager) ? '{!defaultPageSize}' : 10;
                        elemObj.after(pager);
                        elemObj.tablesorter().tablesorterPager({container: pager,size: pageSize});
                       
                    }
                    else{
                        elemObj.tablesorter();
                    }   
                }
              });
              
              $atxPB(".BlogForce9Table").bind("sortEnd",function(e) {
                  $atxPB('.mySort').remove();
                  $atxPB('.tablesorter-headerDesc').find('.tablesorter-header-inner').children().append('<apex:image value="/s.gif" styleClass="sortDesc mySort"  alt="Sorted Descending" title="Sorted Descending" /> ');
                  $atxPB('.tablesorter-headerAsc').find('.tablesorter-header-inner').children().append('<apex:image value="/s.gif" styleClass="sortAsc mySort"  alt="Sorted Ascending" title="Sorted Ascending" />');
              });
          }
          catch(err){
              if (typeof console == "object") {
                  console.log(err);
              }
          }
      }
      
      function validatePageSize(pager){
         var retVal = true;
         if('{!defaultPageSize}'.length == 0 || $atxPB(pager).find('option[value="{!defaultPageSize}"]').length == 0){
             retVal = false;
         }
         
         return retVal;
      }
      
      
   </script>  
   <script id="Blogforce9paginatorTemplate" type="text/x-jQuery-render">
      <div class="paginator" id="pager">
         <span class="prevNextLinks">            
              <span class="prevNext">
                  <img src="/s.gif" class="first" style="cursor:pointer"/>
              </span>
              
              <span class="prevNext">
                  <img src="/s.gif" class="prev" style="cursor:pointer"/>Previous
              </span>
              
              <span class="prevNext">
                  Next<img src="/s.gif" class="next" style="cursor:pointer"/>        
              </span>
              <span class="prevNext">
                  <img src="/s.gif" class="last" style="cursor:pointer"/>
              </span>            
         </span>
         <select class="{!IF(pageSizeOptions != NULL,'pagesize','hidePageSize')}"/>
         <select class="{!IF(pageSizeOptions == NULL,'pagesize','hidePageSize')}">
              <option value="10">10</option>
              <option value="20">20</option>
              <option value="30">30</option>
              <option value="40">40</option>
         </select>       
      </div>
   </script> 
   <style>.hidePageSize{display:none;}</style>
</apex:component>